{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/advisor.guard.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.guard.ts","webpack:///./src/app/components/create-contact-dialog/create-contact-dialog.component.css","webpack:///./src/app/components/create-contact-dialog/create-contact-dialog.component.html","webpack:///./src/app/components/create-contact-dialog/create-contact-dialog.component.ts","webpack:///./src/app/components/modal-form-group/modal-form-group.component.css","webpack:///./src/app/components/modal-form-group/modal-form-group.component.html","webpack:///./src/app/components/modal-form-group/modal-form-group.component.ts","webpack:///./src/app/components/not-found/not-found.component.css","webpack:///./src/app/components/not-found/not-found.component.html","webpack:///./src/app/components/not-found/not-found.component.ts","webpack:///./src/app/components/shared-components.module.ts","webpack:///./src/app/components/svg-chevron/svg-chevron.component.css","webpack:///./src/app/components/svg-chevron/svg-chevron.component.html","webpack:///./src/app/components/svg-chevron/svg-chevron.component.ts","webpack:///./src/app/components/two-line-info/two-line-info.component.css","webpack:///./src/app/components/two-line-info/two-line-info.component.html","webpack:///./src/app/components/two-line-info/two-line-info.component.ts","webpack:///./src/app/enums/direction.enum.ts","webpack:///./src/app/features/advisor/advisor.component.css","webpack:///./src/app/features/advisor/advisor.component.html","webpack:///./src/app/features/advisor/advisor.component.ts","webpack:///./src/app/features/advisor/advisor.module.ts","webpack:///./src/app/features/advisor/contact-single/contact-single.component.css","webpack:///./src/app/features/advisor/contact-single/contact-single.component.html","webpack:///./src/app/features/advisor/contact-single/contact-single.component.ts","webpack:///./src/app/features/advisor/contacts/contacts.component.css","webpack:///./src/app/features/advisor/contacts/contacts.component.html","webpack:///./src/app/features/advisor/contacts/contacts.component.ts","webpack:///./src/app/features/advisor/header/header.component.css","webpack:///./src/app/features/advisor/header/header.component.html","webpack:///./src/app/features/advisor/header/header.component.ts","webpack:///./src/app/features/advisor/home/home.component.css","webpack:///./src/app/features/advisor/home/home.component.html","webpack:///./src/app/features/advisor/home/home.component.ts","webpack:///./src/app/features/advisor/opportunities/opportunities.component.css","webpack:///./src/app/features/advisor/opportunities/opportunities.component.html","webpack:///./src/app/features/advisor/opportunities/opportunities.component.ts","webpack:///./src/app/features/advisor/opportunity-single/opportunity-single.component.css","webpack:///./src/app/features/advisor/opportunity-single/opportunity-single.component.html","webpack:///./src/app/features/advisor/opportunity-single/opportunity-single.component.ts","webpack:///./src/app/features/client/client.module.ts","webpack:///./src/app/features/client/home/home.component.css","webpack:///./src/app/features/client/home/home.component.html","webpack:///./src/app/features/client/home/home.component.ts","webpack:///./src/app/features/login/header/header.component.css","webpack:///./src/app/features/login/header/header.component.html","webpack:///./src/app/features/login/header/header.component.ts","webpack:///./src/app/features/login/login.component.css","webpack:///./src/app/features/login/login.component.html","webpack:///./src/app/features/login/login.component.ts","webpack:///./src/app/features/login/login.module.ts","webpack:///./src/app/helpers/generate-fake-guid.ts","webpack:///./src/app/helpers/svg.ts","webpack:///./src/app/mock-data.service.ts","webpack:///./src/app/pipes/pipes.module.ts","webpack:///./src/app/pipes/placeholder.pipe.ts","webpack:///./src/app/pipes/user-display-name.pipe.ts","webpack:///./src/app/services/api.service.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/breakpoint.service.ts","webpack:///./src/app/services/contact.service.ts","webpack:///./src/app/services/log/log-level-to-string.ts","webpack:///./src/app/services/log/log-level.enum.ts","webpack:///./src/app/services/log/log-levels.ts","webpack:///./src/app/services/log/log.service.ts","webpack:///./src/app/services/log/log.ts","webpack:///./src/app/services/opportunity.service.ts","webpack:///./src/app/services/storage.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { LogService } from './services/log/log.service';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { AuthService } from './services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdvisorGuard implements CanActivate {\n  public user;\n  constructor(private auth: AuthService, private router: Router, private logger: LogService) {\n    this.auth.user$.subscribe(user => (this.user = user));\n  }\n  private _canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    if (this.user.role === 'advisor') {\n      return true;\n    }\n    return false;\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    const canActivate = this._canActivate(next, state);\n    this.logger.silly('AdvisorGuard canActivate ', canActivate);\n    return canActivate;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ContactSingleComponent } from './features/advisor/contact-single/contact-single.component';\nimport { AuthGuard } from './auth.guard';\nimport { AdvisorGuard } from './advisor.guard';\nimport { HomeComponent as AdvisorHomeComponent } from './features/advisor/home/home.component';\nimport { HomeComponent as ClientHomeComponent } from './features/client/home/home.component';\nimport { LoginComponent } from './features/login/login.component';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { AdvisorComponent } from './features/advisor/advisor.component';\nimport { ContactsComponent as AdvisorContactsComponent } from './features/advisor/contacts/contacts.component';\nimport { OpportunitiesComponent as AdvisorOpportunitiesComponent } from './features/advisor/opportunities/opportunities.component';\nimport { OpportunitySingleComponent } from './features/advisor/opportunity-single/opportunity-single.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  {\n    path: '', canActivate: [AuthGuard],\n    children: [\n      {\n        path: 'advisor',\n        canActivate: [AdvisorGuard],\n        component: AdvisorComponent,\n        children: [\n          {\n            path: '',\n            component: AdvisorHomeComponent\n          },\n          {\n            path: 'contacts/:id',\n            component: ContactSingleComponent\n          },\n          {\n            path: 'contacts',\n            component: AdvisorContactsComponent\n          },\n          {\n            path: 'opportunities/:id',\n            component: OpportunitySingleComponent\n          },\n          {\n            path: 'opportunities',\n            component: AdvisorOpportunitiesComponent\n          }\n        ]\n      },\n      {\n        path: 'client',\n        component: ClientHomeComponent\n      },\n    ]\n  },\n  { path: '**', component: NotFoundComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { enableTracing: false })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent { }\n","import { OpportunityService } from './services/opportunity.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\n\nimport { AppComponent } from './app.component';\nimport { LoginModule } from './features/login/login.module';\nimport { AdvisorModule } from './features/advisor/advisor.module';\nimport { ClientModule } from './features/client/client.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { ApiService } from './services/api.service';\nimport { AuthService } from './services/auth.service';\nimport { environment } from '../environments/environment';\nimport { MockDataService } from './mock-data.service';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { LogService } from './services/log/log.service';\nimport { PipesModule } from './pipes/pipes.module';\nimport { SharedComponentsModule } from './components/shared-components.module';\nimport { UserService } from './services/user.service';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { ContactService } from './services/contact.service';\nimport { ContactSingleComponent } from './features/advisor/contact-single/contact-single.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NotFoundComponent,\n    ContactSingleComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatNativeDateModule,\n    PipesModule,\n    SharedComponentsModule,\n    AdvisorModule,\n    ClientModule,\n    LoginModule,\n    AppRoutingModule,\n    HttpClientModule,\n    !environment.production ? HttpClientInMemoryWebApiModule.forRoot(MockDataService, { delay: 300 }) : [],\n  ],\n  providers: [\n    ApiService,\n    AuthService,\n    LogService,\n    UserService,\n    ContactService,\n    OpportunityService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { LogService } from './services/log/log.service';\nimport { AuthService } from './services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  public user = null;\n  constructor(private auth: AuthService, private router: Router, private logger: LogService) {\n    this.auth.user$.subscribe(user => (this.user = user));\n  }\n\n  private _canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    if (this.user) {\n      // a user is logged in / found in storage\n      if (state.url === '/') {\n        // we're on the blank '/' page, we need to redirect to one of the user verticals\n        this.router.navigate(['/' + this.user.role]);\n        return false;\n      }\n      // we're on the right track, continue navigation\n      return true;\n    }\n    // no user is logged in, redirect them to the login page\n    this.router.navigate(['/login']);\n    return false;\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    const canActivate = this._canActivate(next, state);\n    this.logger.silly('AuthGuard canActivate ', canActivate);\n    return canActivate;\n  }\n\n  canActivateChild(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    return this.canActivate(next, state);\n  }\n}\n","module.exports = \".modal-contents {\\n  padding: 25px;\\n}\\n\\n@media (max-width: 700px) {\\n  app-modal-form-group {\\n    flex-direction: column;\\n  }\\n}\"","module.exports = \"<h1 mat-dialog-title>Create a Contact</h1>\\n<div mat-dialog-contents class=\\\"modal-contents\\\">\\n  <form #form=\\\"ngForm\\\">\\n    <app-modal-form-group>\\n      <mat-form-field>\\n        <input matInput [(ngModel)]=\\\"data.firstName\\\" placeholder=\\\"First Name\\\" name=\\\"firstName\\\" required>\\n      </mat-form-field>\\n      <mat-form-field>\\n        <input matInput [(ngModel)]=\\\"data.lastName\\\" placeholder=\\\"Last Name\\\" name=\\\"lastName\\\" required>\\n      </mat-form-field>\\n    </app-modal-form-group>\\n    <app-modal-form-group>\\n      <mat-form-field [style.width.%]=\\\"100\\\">\\n        <input matInput [matDatepicker]=\\\"picker\\\" [(ngModel)]=\\\"data.birthday\\\" placeholder=\\\"Birthday\\\" name=\\\"birthday\\\"\\n          required>\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker></mat-datepicker>\\n      </mat-form-field>\\n    </app-modal-form-group>\\n    <mat-form-field [style.width.%]=\\\"100\\\">\\n      <input matInput [(ngModel)]=\\\"data.advisor\\\" placeholder=\\\"Advisor\\\" name=\\\"advisor\\\" required>\\n    </mat-form-field>\\n    <app-modal-form-group>\\n      <mat-form-field [style.width.%]=\\\"100\\\">\\n        <input matInput [(ngModel)]=\\\"data.address.street\\\" placeholder=\\\"Street Address\\\" name=\\\"address.street\\\" required>\\n      </mat-form-field>\\n    </app-modal-form-group>\\n    <app-modal-form-group>\\n      <mat-form-field>\\n        <input matInput [(ngModel)]=\\\"data.address.city\\\" placeholder=\\\"City\\\" name=\\\"address.city\\\" required>\\n      </mat-form-field>\\n      <mat-form-field>\\n        <input matInput [(ngModel)]=\\\"data.address.state\\\" placeholder=\\\"State\\\" name=\\\"address.state\\\" required>\\n      </mat-form-field>\\n    </app-modal-form-group>\\n    <mat-form-field [style.width.%]=\\\"100\\\">\\n      <input matInput [(ngModel)]=\\\"data.address.postalCode\\\" placeholder=\\\"Zip\\\" name=\\\"address.postalCode\\\" required>\\n    </mat-form-field>\\n  </form>\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button (click)=\\\"closeDialog()\\\">CANCEL</button>\\n  <button mat-button [mat-dialog-close]=\\\"data\\\" [disabled]=\\\"!form.valid\\\">CREATE CONTACT</button>\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { CreateContactDialogData } from './create-contact-dialog-data';\n\n@Component({\n  selector: 'app-create-contact-dialog',\n  templateUrl: './create-contact-dialog.component.html',\n  styleUrls: ['./create-contact-dialog.component.css']\n})\nexport class CreateContactDialogComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<CreateContactDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: CreateContactDialogData\n  ) { }\n\n  ngOnInit() {\n  }\n\n  closeDialog(): void {\n    this.dialogRef.close();\n  }\n}\n","module.exports = \":host {\\n  display: flex;\\n  justify-content: space-between;\\n}\"","module.exports = \"<ng-content></ng-content>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-modal-form-group',\n  templateUrl: './modal-form-group.component.html',\n  styleUrls: ['./modal-form-group.component.css']\n})\nexport class ModalFormGroupComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"centered\\\">\\n  <div class=\\\"message-container\\\">\\n    <h1>\\n      404 - Page not found.\\n    </h1>\\n    <a [routerLink]=\\\"'/'\\\">\\n      back to site\\n    </a>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatButtonModule } from '@angular/material/button';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSidenavModule } from '@angular/material/sidenav';\n\nimport { TwoLineInfoComponent } from './two-line-info/two-line-info.component';\nimport { CreateContactDialogComponent } from './create-contact-dialog/create-contact-dialog.component';\nimport { ModalFormGroupComponent } from './modal-form-group/modal-form-group.component';\nimport { SvgChevronComponent } from './svg-chevron/svg-chevron.component';\n\nconst materialModules = [MatButtonModule, MatGridListModule, LayoutModule, MatDialogModule, MatToolbarModule, MatCardModule, MatFormFieldModule, MatInputModule, MatDatepickerModule, MatDividerModule, MatTableModule, MatProgressSpinnerModule, MatSidenavModule];\nconst exportedDeclarations = [TwoLineInfoComponent, CreateContactDialogComponent, ModalFormGroupComponent, SvgChevronComponent];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ...materialModules\n  ],\n  entryComponents: [CreateContactDialogComponent],\n  declarations: [...exportedDeclarations],\n  exports: [...exportedDeclarations, ...materialModules, FormsModule]\n})\nexport class SharedComponentsModule { }\n","module.exports = \":host {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  height: 100%;\\n  width: 100%;\\n}\\n\\nsvg {\\n  height: 100%;\\n  width: 100%;\\n}\"","module.exports = \"<svg [attr.viewBox]=\\\"getViewBox()\\\">\\n  <path d=\\\"M 97.101682,39.687822 59.743753,76.667996 C 56.512958,80.047904 45.925892,83.487454 38.350921,75.773314 L 2.8618825,38.763317 a 10.099962,10.099962 0 0 1 0,-13.877506 9.1257526,9.1257526 0 0 1 13.3009345,0 L 48.957869,59.06265 83.253998,25.263566 a 9.5035071,9.5035071 0 0 1 13.847684,0 c 3.817308,3.976362 3.817308,10.437952 0,14.414315 z\\\"\\n    [attr.fill]=\\\"fill\\\" clip-rule=\\\"evenodd\\\" fill-rule=\\\"evenodd\\\" [attr.transform]=\\\"getTransform()\\\" />\\n</svg>\"","import { Component, Input, OnInit } from '@angular/core';\n\n\nimport { Direction } from '../../enums/direction.enum';\nimport { getSvgRotation } from '../../helpers/svg';\n\n@Component({\n  selector: '[app-svg-chevron], app-svg-chevron',\n  templateUrl: './svg-chevron.component.html',\n  styleUrls: ['./svg-chevron.component.css']\n})\nexport class SvgChevronComponent implements OnInit {\n  @Input()\n  fill = '#262626';\n  @Input()\n  direction: Direction = Direction.down;\n  private _directionAngles = {\n    [Direction.up]: 180,\n    [Direction.down]: 0,\n    [Direction.right]: -90,\n    [Direction.left]: 90\n  };\n  private _height = 100;\n  private _width = 100;\n  constructor() { }\n\n  ngOnInit() { }\n\n  getViewBox() {\n    return `0 0 ${this._width} ${this._height}`;\n  }\n\n  getTransform() {\n    const angle = this._directionAngles[this.direction];\n    const x = this._width / 2;\n    const y = this._height / 2;\n    return getSvgRotation(angle, x, y);\n  }\n}\n","module.exports = \"h6 {\\n  font-size: 1rem;\\n  margin-top: 0;\\n  margin-bottom: 1rem;\\n}\"","module.exports = \"<h6>{{ label }}</h6>\\n<ng-content></ng-content>\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-two-line-info',\n  templateUrl: './two-line-info.component.html',\n  styleUrls: ['./two-line-info.component.css']\n})\nexport class TwoLineInfoComponent implements OnInit {\n  @Input() label;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export enum Direction {\n  up = 'up',\n  right = 'right',\n  down = 'down',\n  left = 'left'\n}\n","module.exports = \"\"","module.exports = \"<advisor-header></advisor-header>\\n<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-advisor',\n  templateUrl: './advisor.component.html',\n  styleUrls: ['./advisor.component.css']\n})\nexport class AdvisorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home/home.component';\nimport { HeaderComponent } from './header/header.component';\nimport { PipesModule } from '../../pipes/pipes.module';\nimport { SharedComponentsModule } from '../../components/shared-components.module';\nimport { AdvisorComponent } from './advisor.component';\nimport { ContactsComponent } from './contacts/contacts.component';\nimport { OpportunitiesComponent } from './opportunities/opportunities.component';\nimport { OpportunitySingleComponent } from './opportunity-single/opportunity-single.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatToolbarModule,\n    PipesModule,\n    RouterModule,\n    SharedComponentsModule\n  ],\n  declarations: [HomeComponent, HeaderComponent, AdvisorComponent, ContactsComponent, OpportunitiesComponent, OpportunitySingleComponent]\n})\nexport class AdvisorModule { }\n","module.exports = \".content {\\n  padding: 60px 40px;\\n}\\n\\n.form-content {}\\n\\n.actions {\\n  display: flex;\\n  justify-content: flex-end;\\n}\\n\\nmat-form-field {\\n  flex: 1;\\n}\\n\\n@media (min-width: 700px) {\\n  mat-form-field:not(:first-child) {\\n    margin-left: 1rem;\\n  }\\n}\\n\\n.error {\\n  color: red;\\n}\\n\\n.loading-container {\\n  display: flex;\\n  justify-content: center;\\n  margin-top: 40px;\\n}\\n\\n@media (max-width: 700px) {\\n  app-modal-form-group {\\n    flex-direction: column;\\n  }\\n}\"","module.exports = \"<ng-template #loadingSpinner>\\n  <div class=\\\"loading-container\\\">\\n    <mat-progress-spinner color=\\\"primary\\\" mode=\\\"indeterminate\\\"></mat-progress-spinner>\\n  </div>\\n</ng-template>\\n<div class=\\\"content\\\" *ngIf=\\\"!loading; else loadingSpinner\\\">\\n  <h1>{{ contact | userDisplayName }}</h1>\\n  <form #form=\\\"ngForm\\\">\\n    <div *ngIf=\\\"error\\\" class=\\\"error\\\">{{ error }}</div>\\n    <div class=\\\"form-content\\\">\\n      <app-modal-form-group>\\n        <mat-form-field>\\n          <input matInput [(ngModel)]=\\\"contact.firstName\\\" placeholder=\\\"First Name\\\" name=\\\"firstName\\\" required>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput [(ngModel)]=\\\"contact.lastName\\\" placeholder=\\\"Last Name\\\" name=\\\"lastName\\\" required>\\n        </mat-form-field>\\n      </app-modal-form-group>\\n      <app-modal-form-group>\\n        <mat-form-field [style.width.%]=\\\"100\\\">\\n          <input matInput [matDatepicker]=\\\"picker\\\" [(ngModel)]=\\\"contact.birthday\\\" placeholder=\\\"Birthday\\\" name=\\\"birthday\\\"\\n            required>\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #picker></mat-datepicker>\\n        </mat-form-field>\\n      </app-modal-form-group>\\n      <app-modal-form-group>\\n        <mat-form-field [style.width.%]=\\\"100\\\">\\n          <input matInput [(ngModel)]=\\\"contact.advisor\\\" placeholder=\\\"Advisor\\\" name=\\\"advisor\\\" required>\\n        </mat-form-field>\\n      </app-modal-form-group>\\n      <app-modal-form-group>\\n        <mat-form-field [style.width.%]=\\\"100\\\">\\n          <input matInput [(ngModel)]=\\\"contact.address.street\\\" placeholder=\\\"Street Address\\\" name=\\\"address.street\\\"\\n            required>\\n        </mat-form-field>\\n      </app-modal-form-group>\\n      <app-modal-form-group>\\n        <mat-form-field>\\n          <input matInput [(ngModel)]=\\\"contact.address.city\\\" placeholder=\\\"City\\\" name=\\\"address.city\\\" required>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput [(ngModel)]=\\\"contact.address.state\\\" placeholder=\\\"State\\\" name=\\\"address.state\\\" required>\\n        </mat-form-field>\\n      </app-modal-form-group>\\n      <app-modal-form-group>\\n        <mat-form-field [style.width.%]=\\\"100\\\">\\n          <input matInput [(ngModel)]=\\\"contact.address.postalCode\\\" placeholder=\\\"Zip\\\" name=\\\"address.postalCode\\\" required>\\n        </mat-form-field>\\n      </app-modal-form-group>\\n    </div>\\n    <div class=\\\"actions\\\">\\n      <button *ngIf=\\\"form.touched\\\" mat-flat-button color=\\\"primary\\\" (click)=\\\"onSubmit()\\\">Save</button>\\n    </div>\\n  </form>\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport { switchMap } from 'rxjs/operators';\n\nimport { LogService } from '../../../services/log/log.service';\nimport { Contact } from '../../../interfaces/contact';\nimport { ContactService } from '../../../services/contact.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-contact-single',\n  templateUrl: './contact-single.component.html',\n  styleUrls: ['./contact-single.component.css']\n})\nexport class ContactSingleComponent implements OnInit {\n  public contact$: Observable<Contact>;\n  public contactSubscription: Subscription;\n  public contact: Contact;\n  public error: string | null;\n  public loading = true;\n  @ViewChild('form') form: NgForm;\n  constructor(private contactService: ContactService, private route: ActivatedRoute, private logger: LogService, private router: Router) { }\n\n  ngOnInit() {\n    this.initializeContactSubscription();\n  }\n\n  initializeContactSubscription() {\n    this.contact$ = this.route.paramMap.pipe(\n      switchMap((params: ParamMap) => this.contactService.getContact(params.get('id')))\n    );\n    this.contactSubscription = this.contact$.subscribe(contact => {\n      this.loading = false;\n      this.contact = contact;\n    });\n  }\n\n  onSubmit() {\n    this.contactService.updateContact(this.route.snapshot.params['id'], this.contact).subscribe(this.handleSubmitSuccess, this.handleSubmitError);\n  }\n\n  handleSubmitSuccess = (response) => {\n    this.logger.info('Successfully updated contact ', response);\n    this.error = null;\n    this.loading = true;\n    this.contactSubscription.unsubscribe();\n    this.initializeContactSubscription();\n  }\n\n  handleSubmitError = (errorResponse) => {\n    const errorMessage = (errorResponse.body && errorResponse.body.error) || 'Error updating contact';\n    this.error = errorMessage;\n  }\n\n}\n","module.exports = \"app-svg-chevron {\\n  width: .75rem;\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n\\n.chevron-button {}\\n\\n.chevron-button-container {\\n  width: 100%;\\n  display: flex;\\n  justify-content: flex-end;\\n}\"","module.exports = \"<mat-table [dataSource]=\\\"contacts$ | async\\\">\\n  <ng-container matColumnDef=\\\"name\\\">\\n    <mat-header-cell *matHeaderCellDef>Name</mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let contact\\\">{{contact | userDisplayName}}</mat-cell>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"birthday\\\">\\n    <mat-header-cell *matHeaderCellDef>Birthday</mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let contact\\\">{{ contact.birthday | date }}</mat-cell>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"advisor\\\">\\n    <mat-header-cell *matHeaderCellDef>Advisor</mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let contact\\\">{{ contact.advisor }}</mat-cell>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"actions\\\">\\n    <mat-header-cell *matHeaderCellDef></mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let contact\\\" class=\\\"chevron-button-container\\\">\\n      <a [routerLink]=\\\"'./' + contact.id\\\">\\n        <button mat-icon-button class=\\\"chevron-button\\\">\\n          <app-svg-chevron [direction]=\\\"'right'\\\"></app-svg-chevron>\\n        </button>\\n      </a>\\n    </mat-cell>\\n  </ng-container>\\n  <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n  <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n</mat-table>\"","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { ContactService } from '../../../services/contact.service';\nimport { LogService } from '../../../services/log/log.service';\n\n@Component({\n  selector: 'app-contacts',\n  templateUrl: './contacts.component.html',\n  styleUrls: ['./contacts.component.css']\n})\nexport class ContactsComponent implements OnInit {\n  public contacts$: Observable<any>;\n  public displayedColumns = ['name', 'birthday', 'advisor', 'actions'];\n  constructor(private logger: LogService, private contactService: ContactService) { }\n\n  ngOnInit() {\n    this.contacts$ = this.contactService.getContacts();\n  }\n\n}\n","module.exports = \"ul {\\n  display: flex;\\n  list-style-type: none;\\n  font-size: 1rem;\\n  padding: 0;\\n}\\n\\na {\\n  text-decoration: none;\\n  color: #fff;\\n}\\n\\nli:last-child {\\n  cursor: pointer;\\n}\\n\\nnav {\\n  width: 100%;\\n}\\n\\n.box-shadow-menu-container {\\n  margin-left: auto;\\n}\\n\\n.box-shadow-menu {\\n  position: relative;\\n  padding-left: 1.25em;\\n  top: -25%;\\n}\\n\\n.box-shadow-menu:before {\\n  content: \\\"\\\";\\n  position: absolute;\\n  left: 0;\\n  top: 0.25em;\\n  width: 1em;\\n  height: 0.15em;\\n  background: #fff;\\n  box-shadow: 0 0.25em 0 0 #fff, 0 0.5em 0 0 #fff;\\n}\\n\\nmat-sidenav-container,\\nmat-sidenav {\\n  background: #3f51b5;\\n  height: 100vh;\\n  box-sizing: border-box;\\n}\\n\\nmat-sidenav-container {\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n}\\n\\n.mobile-nav {\\n  height: 100%;\\n}\\n\\n.mobile-nav ul {\\n  flex-direction: column;\\n  height: 100%;\\n  max-height: 85vh;\\n  justify-content: space-between;\\n  align-items: center;\\n  width: 40vw;\\n  font-size: 1rem;\\n}\\n\\n.desktop-nav {\\n  margin-left: 40px;\\n}\\n\\n.desktop-nav li:last-child {\\n  margin-left: auto;\\n}\\n\\n.desktop-nav li:not(:last-child) {\\n  margin-right: 1rem;\\n}\"","module.exports = \"<ng-template #mobileNav>\\n  <div class=\\\"box-shadow-menu-container\\\" (click)=\\\"navIsOpen = !navIsOpen\\\">\\n    <a class=\\\"box-shadow-menu\\\">\\n    </a>\\n  </div>\\n  <mat-sidenav-container class=\\\"mobile-nav-container\\\">\\n    <mat-sidenav #sideNav mode=\\\"side\\\" [opened]=\\\"navIsOpen\\\">\\n      <nav class=\\\"mobile-nav\\\">\\n        <ul>\\n          <li *ngFor=\\\"let link of links\\\">\\n            <a [routerLink]=\\\"link.href\\\" (click)=\\\"navIsOpen = false\\\">{{ link.text }}</a>\\n          </li>\\n          <li (click)=\\\"onClickLogout()\\\">\\n            <a>Logout</a>\\n          </li>\\n        </ul>\\n      </nav>\\n    </mat-sidenav>\\n  </mat-sidenav-container>\\n</ng-template>\\n<mat-toolbar color=\\\"primary\\\">\\n  <a [routerLink]=\\\"'/advisor'\\\">Invester</a>\\n  <nav class=\\\"desktop-nav\\\" *ngIf=\\\"(isDesktop$ | async); else mobileNav\\\">\\n    <ul>\\n      <li *ngFor=\\\"let link of links\\\">\\n        <a [routerLink]=\\\"link.href\\\">{{ link.text }}</a>\\n      </li>\\n      <li>\\n        <a (click)=\\\"onClickLogout()\\\">Logout</a>\\n      </li>\\n    </ul>\\n  </nav>\\n</mat-toolbar>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { BreakpointService } from '../../../services/breakpoint.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { HeaderLink } from '../../../interfaces/header-link';\n\n@Component({\n  selector: 'advisor-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  public isDesktop$: Observable<boolean>;\n  public navIsOpen = false;\n  public links: HeaderLink[] = [\n    {\n      href: '/advisor',\n      text: 'Dashboard'\n    },\n    {\n      href: './contacts',\n      text: 'Contacts'\n    },\n    {\n      href: './opportunities',\n      text: 'Opportunities'\n    }\n  ];\n  constructor(private auth: AuthService, private router: Router, private breakpointService: BreakpointService) { }\n\n  ngOnInit() {\n    this.isDesktop$ = this.breakpointService.isDesktop$;\n  }\n\n  onClickLogout() {\n    this.auth.logout();\n    this.router.navigate(['/login']);\n  }\n\n}\n","module.exports = \".container {\\n  padding: 60px 40px;\\n}\\n\\n.row {\\n  display: flex;\\n  flex-direction: row;\\n}\\n\\n.greeting {\\n  margin-bottom: 3rem;\\n}\\n\\nmat-grid-list {\\n  width: 100%;\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n\\n.dashboard-info {\\n  margin-bottom: 3rem;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <h2 class=\\\"greeting\\\">Hello, {{ auth.user$ | async | userDisplayName }}</h2>\\n  <mat-grid-list class=\\\"dashboard-info\\\" [cols]=\\\"numberOfColumns\\\" rowHeight=\\\"60px\\\">\\n    <mat-grid-tile [colspan]=\\\"columnSpan\\\">\\n      <app-two-line-info label=\\\"Assets\\\">{{ (userService.dashboard$ | async)?.assets | currency | placeholder }}</app-two-line-info>\\n    </mat-grid-tile>\\n    <mat-grid-tile [colspan]=\\\"columnSpan\\\">\\n      <app-two-line-info label=\\\"Donations\\\">{{ (userService.dashboard$ | async)?.donations | currency | placeholder }}</app-two-line-info>\\n    </mat-grid-tile>\\n    <mat-grid-tile [colspan]=\\\"columnSpan\\\">\\n      <app-two-line-info label=\\\"Contacts\\\">{{ (userService.dashboard$ | async)?.contacts | placeholder }}</app-two-line-info>\\n    </mat-grid-tile>\\n    <mat-grid-tile [colspan]=\\\"columnSpan\\\">\\n      <app-two-line-info label=\\\"Opportunities\\\">{{ (userService.dashboard$ | async)?.opportunities | placeholder }}</app-two-line-info>\\n    </mat-grid-tile>\\n  </mat-grid-list>\\n  <mat-grid-list [cols]=\\\"numberOfColumns\\\" rowHeight=\\\"30px\\\" [gutterSize]=\\\"actionGutters\\\">\\n    <mat-grid-tile [colspan]=\\\"actionColumnSpan\\\" [rowspan]=\\\"rowSpan\\\">\\n      <button mat-raised-button color=\\\"primary\\\" [style.width.%]=\\\"100\\\" (click)=\\\"openCreateContactDialog()\\\">CREATE\\n        CONTACT</button>\\n    </mat-grid-tile>\\n    <mat-grid-tile [colspan]=\\\"actionColumnSpan\\\" [rowspan]=\\\"rowSpan\\\">\\n      <button mat-raised-button color=\\\"primary\\\" [style.width.%]=\\\"100\\\">CREATE OPPORTUNITY</button>\\n    </mat-grid-tile>\\n  </mat-grid-list>\\n</div>\"","import { Router } from '@angular/router';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Subscription } from 'rxjs';\n\nimport { BreakpointService } from '../../../services/breakpoint.service';\nimport { UserService } from '../../../services/user.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { LogService } from '../../../services/log/log.service';\nimport { CreateContactDialogData } from '../../../components/create-contact-dialog/create-contact-dialog-data';\nimport { CreateContactDialogComponent } from '../../../components/create-contact-dialog/create-contact-dialog.component';\nimport { ContactService } from '../../../services/contact.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n  public isDesktop$: Subscription;\n  public isDesktop: boolean;\n  public numberOfColumns: number;\n  public columnSpan = 1;\n  public rowSpan: number;\n  public actionGutters: string;\n  public actionColumnSpan: number;\n\n  constructor(public auth: AuthService, public userService: UserService, public breakpoint: BreakpointService, public dialog: MatDialog, private logger: LogService, private contactService: ContactService, private router: Router) {\n    this.isDesktop$ = breakpoint.isDesktop$.subscribe(isDesktop => {\n      this.logger.info(`HomeComponent is in ${isDesktop ? 'desktop' : 'mobile'} mode`);\n      this.isDesktop = isDesktop;\n      this.numberOfColumns = isDesktop ? 4 : 2;\n      this.rowSpan = isDesktop ? 2 : 1;\n      this.actionGutters = isDesktop ? '50px' : '10px';\n      this.actionColumnSpan = isDesktop ? 2 : 2;\n    });\n  }\n\n  ngOnInit() { }\n\n  ngOnDestroy() {\n    this.isDesktop$.unsubscribe();\n  }\n\n  openCreateContactDialog() {\n    const data: CreateContactDialogData = {\n      firstName: '',\n      lastName: '',\n      birthday: null,\n      advisor: '',\n      address: {\n        street: '',\n        city: '',\n        state: '',\n        postalCode: ''\n      }\n    };\n    const options = {\n      width: '500px',\n      maxWidth: '90vw',\n      maxHeight: '80vh',\n      data\n    };\n    const dialogRef = this.dialog.open(CreateContactDialogComponent, options);\n    dialogRef.afterClosed().subscribe(result => {\n      this.logger.info('CreateContactDialogComponent closed ', result);\n      if (!result) {\n        return;\n      }\n      this.contactService.createContact(result).subscribe(response => {\n        this.logger.info('Response: ', response);\n        this.router.navigate([`advisor/contacts/${response.id}`]);\n      });\n    });\n  }\n}\n","module.exports = \"app-svg-chevron {\\n  width: .75rem;\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n\\n.chevron-button {}\\n\\n.chevron-button-container {\\n  width: 100%;\\n  display: flex;\\n  justify-content: flex-end;\\n}\"","module.exports = \"<mat-table [dataSource]=\\\"opportunities$ | async\\\">\\n  <ng-container matColumnDef=\\\"amount\\\">\\n    <mat-header-cell *matHeaderCellDef>Amount</mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let opportunity\\\">{{opportunity.amount}}</mat-cell>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"advisor\\\">\\n    <mat-header-cell *matHeaderCellDef>Advisor</mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let opportunity\\\">{{ opportunity.advisor }}</mat-cell>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"dateCreated\\\">\\n    <mat-header-cell *matHeaderCellDef>Date Created</mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let opportunity\\\">{{ opportunity.dateCreated | date }}</mat-cell>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"lastActivity\\\">\\n    <mat-header-cell *matHeaderCellDef>Last Activity</mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let opportunity\\\">{{ opportunity.lastActivity.type }}</mat-cell>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"actions\\\">\\n    <mat-header-cell *matHeaderCellDef></mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let opportunity\\\" class=\\\"chevron-button-container\\\">\\n      <a [routerLink]=\\\"'./' + opportunity.id\\\">\\n        <button mat-icon-button class=\\\"chevron-button\\\">\\n          <app-svg-chevron [direction]=\\\"'right'\\\"></app-svg-chevron>\\n        </button>\\n      </a>\\n    </mat-cell>\\n  </ng-container>\\n  <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n  <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n</mat-table>\"","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Opportunity } from '../../../interfaces/opportunity';\nimport { OpportunityService } from '../../../services/opportunity.service';\n\n@Component({\n  selector: 'app-opportunities',\n  templateUrl: './opportunities.component.html',\n  styleUrls: ['./opportunities.component.css']\n})\nexport class OpportunitiesComponent implements OnInit {\n  public opportunities$: Observable<Opportunity[]>;\n  public displayedColumns = ['amount', 'advisor', 'dateCreated', 'lastActivity', 'actions'];\n  constructor(private opportunityService: OpportunityService) { }\n\n  ngOnInit() {\n    this.opportunities$ = this.opportunityService.getOpportunities();\n  }\n\n}\n","module.exports = \".content {\\n  padding: 60px 40px;\\n}\\n\\n.form-content {}\\n\\n.actions {\\n  display: flex;\\n  justify-content: flex-end;\\n}\\n\\nmat-form-field {\\n  flex: 1;\\n}\\n\\n@media (min-width: 700px) {\\n  mat-form-field:not(:first-child) {\\n    margin-left: 1rem;\\n  }\\n}\\n\\n.error {\\n  color: red;\\n}\\n\\n.loading-container {\\n  display: flex;\\n  justify-content: center;\\n  margin-top: 40px;\\n}\\n\\n@media (max-width: 700px) {\\n  app-modal-form-group {\\n    flex-direction: column;\\n  }\\n}\"","module.exports = \"<ng-template #loadingSpinner>\\n  <div class=\\\"loading-container\\\">\\n    <mat-progress-spinner color=\\\"primary\\\" mode=\\\"indeterminate\\\"></mat-progress-spinner>\\n  </div>\\n</ng-template>\\n<div class=\\\"content\\\" *ngIf=\\\"!loading; else loadingSpinner\\\">\\n  <h1>Opportunity</h1>\\n  <form #form=\\\"ngForm\\\">\\n    <div *ngIf=\\\"error\\\" class=\\\"error\\\">{{ error }}</div>\\n    <div class=\\\"form-content\\\">\\n      <app-modal-form-group>\\n        <mat-form-field>\\n          <input matInput [(ngModel)]=\\\"opportunity.amount\\\" [readonly]=\\\"true\\\" placeholder=\\\"Amount\\\" name=\\\"amount\\\">\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput [(ngModel)]=\\\"opportunity.advisor\\\" placeholder=\\\"Advisor\\\" name=\\\"advisor\\\" required>\\n        </mat-form-field>\\n      </app-modal-form-group>\\n      <app-modal-form-group>\\n        <mat-form-field [style.width.%]=\\\"100\\\">\\n          <input matInput [matDatepicker]=\\\"picker\\\" [(ngModel)]=\\\"opportunity.dateCreated\\\" placeholder=\\\"Date Created\\\"\\n            name=\\\"dateCreated\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #picker [disabled]=\\\"true\\\"></mat-datepicker>\\n        </mat-form-field>\\n      </app-modal-form-group>\\n      <app-modal-form-group>\\n        <mat-form-field [style.width.%]=\\\"100\\\">\\n          <input matInput [(ngModel)]=\\\"opportunity.lastActivity.type\\\" [readonly]=\\\"true\\\" placeholder=\\\"Last Activity\\\"\\n            name=\\\"lastActivity.type\\\">\\n        </mat-form-field>\\n      </app-modal-form-group>\\n    </div>\\n    <div class=\\\"actions\\\">\\n      <button *ngIf=\\\"form.touched\\\" mat-flat-button color=\\\"primary\\\" (click)=\\\"onSubmit()\\\">Save</button>\\n    </div>\\n  </form>\\n</div>\"","import { ActivatedRoute, ParamMap } from '@angular/router';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { NgForm } from '@angular/forms';\n\nimport { OpportunityService } from '../../../services/opportunity.service';\nimport { LogService } from '../../../services/log/log.service';\nimport { Opportunity } from '../../../interfaces/opportunity';\n\n@Component({\n  selector: 'app-opportunity-single',\n  templateUrl: './opportunity-single.component.html',\n  styleUrls: ['./opportunity-single.component.css']\n})\nexport class OpportunitySingleComponent implements OnInit {\n  public opportunity$: Observable<Opportunity>;\n  public opportunitySubscription: Subscription;\n  public opportunity: Opportunity;\n  public error: string | null;\n  public loading = true;\n  @ViewChild('form') form: NgForm;\n  constructor(private opportunityService: OpportunityService, private route: ActivatedRoute, private logger: LogService) { }\n\n  ngOnInit() {\n    this.initializeOpportunitySubscription();\n  }\n\n  initializeOpportunitySubscription() {\n    this.opportunity$ = this.route.paramMap.pipe(\n      switchMap((params: ParamMap) => this.opportunityService.getOpportunity(params.get('id')))\n    );\n    this.opportunitySubscription = this.opportunity$.subscribe(opportunity => {\n      this.loading = false;\n      this.opportunity = opportunity;\n    });\n  }\n\n  onSubmit() {\n    this.opportunityService.updateOpportunity(this.route.snapshot.params['id'], this.opportunity).subscribe(this.handleSubmitSuccess, this.handleSubmitError);\n  }\n\n  handleSubmitSuccess = response => {\n    this.logger.info('Successfully updated opportunity ', response);\n    this.error = null;\n    this.loading = true;\n    this.opportunitySubscription.unsubscribe();\n    this.initializeOpportunitySubscription();\n  }\n\n  handleSubmitError = errorResponse => {\n    const errorMessage = (errorResponse.body && errorResponse.body.error) || 'Error updating opportunity';\n    this.error = errorMessage;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomeComponent } from './home/home.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [HomeComponent]\n})\nexport class ClientModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  home works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n  <span>Invester</span>\\n</mat-toolbar>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'login-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"mat-card {\\n  padding: 25px;\\n  display: flex;\\n  flex-direction: column;\\n  width: 600px;\\n  max-width: 90vw;\\n  margin-top: 20vh;\\n  margin-left: auto;\\n  margin-right: auto;\\n  box-sizing: border-box;\\n}\\n\\nform {}\\n\\nform .fields {\\n  display: flex;\\n  flex-direction: column;\\n  padding: 15px 0 0 10px;\\n}\\n\\nbutton {\\n  width: 100%;\\n}\"","module.exports = \"<login-header></login-header>\\n<mat-card>\\n  <h1 mat-card-title>Login</h1>\\n  <form (ngSubmit)=\\\"onSubmitForm($event)\\\" #loginForm=\\\"ngForm\\\">\\n    <div class=\\\"fields\\\">\\n      <mat-form-field>\\n        <input matInput [(ngModel)]=\\\"data.email\\\" placeholder=\\\"Email\\\" name=\\\"email\\\" type=\\\"email\\\" autocomplete=\\\"username email\\\"\\n          required>\\n      </mat-form-field>\\n      <mat-form-field>\\n        <input matInput [(ngModel)]=\\\"data.password\\\" placeholder=\\\"Password\\\" name=\\\"password\\\" type=\\\"password\\\" autocomplete=\\\"current-password\\\"\\n          required>\\n      </mat-form-field>\\n    </div>\\n    <mat-card-actions>\\n      <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!loginForm.valid && !submitting\\\">LOGIN</button>\\n    </mat-card-actions>\\n  </form>\\n</mat-card>\"","import { ApiService } from './../../services/api.service';\nimport { AuthService } from './../../services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  public data = {\n    email: '',\n    password: ''\n  };\n\n  public submitting = false;\n\n  constructor(private auth: AuthService, private api: ApiService, private router: Router) { }\n\n  async ngOnInit() {\n  }\n\n  async onSubmitForm(event) {\n    this.submitting = true;\n    event.preventDefault();\n    const { email, password } = this.data;\n    const user: any = await this.auth.loginWithCredentials(email, password);\n    this.router.navigate([user && user.role === 'advisor' ? '/advisor' : '/client']);\n    this.submitting = false;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LoginComponent } from './login.component';\nimport { HeaderComponent } from './header/header.component';\nimport { SharedComponentsModule } from '../../components/shared-components.module';\n\n@NgModule({\n  imports: [CommonModule, SharedComponentsModule],\n  declarations: [LoginComponent, HeaderComponent]\n})\nexport class LoginModule { }\n","export const generateFakeGuid = () => {\n  function s4() {\n    return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  }\n  return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n}","export function getSvgRotation(\n  angle: number,\n  originX?: number,\n  originY?: number\n): string {\n  const args = [angle];\n  if (originX) {\n    args.push(originX);\n  }\n  if (originY) {\n    args.push(originY);\n  }\n  return `rotate(${args.join(' ')})`;\n}\n","import { InMemoryDbService } from 'angular-in-memory-web-api';\nimport * as faker from 'faker';\n\nimport { Activity } from './interfaces/activity';\nimport { Contact } from './interfaces/contact';\nimport { UserDashboard } from './interfaces/user-dashboard';\nimport { Opportunity } from './interfaces/opportunity';\nimport { User, UserRole } from './interfaces/user';\nimport { Address } from './interfaces/address';\n\nexport class MockDataService implements InMemoryDbService {\n\n  chooseRandom = <T>(arr: T[]): T => {\n    return arr[Math.floor(Math.random() * arr.length)];\n  }\n\n  createMockList = <T>(count: number, callback: () => T): T[] => {\n    const arr: T[] = [];\n    for (let i = count; i > 0; i--) {\n      arr.push(callback());\n    }\n    return arr;\n  }\n\n  mockAddress = (overrides: Partial<Address> = {}): Address => {\n    return {\n      street: faker.address.streetAddress(),\n      city: faker.address.city(),\n      state: faker.address.state(),\n      postalCode: faker.address.zipCode(),\n      ...overrides\n    };\n  }\n\n  mockUser = (overrides: Partial<User> = {}): User => {\n    return {\n      id: faker.random.uuid(),\n      accountId: faker.random.uuid(),\n      dashboardId: faker.random.uuid(),\n      email: faker.internet.email(),\n      birthday: faker.date.past(20),\n      firstName: faker.name.firstName(),\n      lastName: faker.name.lastName(),\n      image: faker.internet.avatar(),\n      role: this.chooseRandom<UserRole>(['advisor', 'client']),\n      token: faker.random.uuid(),\n      address: this.mockAddress(overrides.address),\n      ...overrides\n    };\n  }\n\n  mockContact = (overrides: Partial<Contact> = {}): Contact => {\n    return {\n      id: faker.random.uuid(),\n      birthday: faker.date.past(20),\n      advisor: faker.name.findName(),\n      firstName: faker.name.firstName(),\n      lastName: faker.name.lastName(),\n      address: this.mockAddress(overrides.address),\n      ...overrides\n    };\n  }\n\n  mockOpportunity = (overrides: Partial<Opportunity> = {}): Opportunity => {\n    return {\n      id: faker.random.uuid(),\n      contactId: faker.random.uuid(),\n      advisor: faker.name.findName(),\n      amount: faker.random.number({ min: -5000, max: 1000000 }),\n      dateCreated: faker.date.recent(),\n      lastActivity: this.mockActivity(overrides.lastActivity),\n      ...overrides\n    };\n  }\n\n  mockActivity = (overrides: Partial<Activity> = {}): Activity => {\n    return {\n      id: faker.random.uuid(),\n      sourceId: faker.random.uuid(),\n      type: this.chooseRandom(['call', 'notes']),\n      dateCreated: faker.date.recent(),\n      ...overrides\n    };\n  }\n\n  mockDashboard = (overrides: Partial<UserDashboard> = {}): UserDashboard => {\n    return {\n      id: faker.random.uuid(),\n      assets: faker.random.number({ min: -5000, max: 1000000 }),\n      donations: faker.random.number({ min: -5000, max: 1000000 }),\n      contacts: faker.random.number(15),\n      opportunities: faker.random.number(25),\n      ...overrides\n    };\n  }\n\n  createDb() {\n    const testUser: User = this.mockUser({\n      id: 'test-user',\n      dashboardId: 'test-dashboard',\n      accountId: 'test-account',\n      email: 'test@test.com',\n      role: 'advisor',\n    });\n    // tslint:disable:no-console\n    console.time('Create Mock Database');\n    const users: User[] = [\n      testUser,\n      this.mockUser({\n        id: 'test-client',\n        dashboardId: 'test-client-dashboard',\n        accountId: 'test-client-account',\n        role: 'client',\n      }),\n      ...this.createMockList<User>(faker.random.number(20), this.mockUser)\n    ];\n    const testOpportunityActivity: Activity = this.mockActivity({\n      id: 'test-opportunity-activity',\n      sourceId: 'test-opportunity',\n      type: 'call'\n    });\n    const activities: Activity[] = [\n      testOpportunityActivity,\n      ...this.createMockList<Activity>(faker.random.number(50), this.mockActivity)\n    ];\n    const testOpportunity: Opportunity = this.mockOpportunity({\n      id: 'test-opportunity',\n      contactId: '588b9214-6ec9-4519-8c30-62467ae95354',\n      lastActivity: testOpportunityActivity\n    });\n    const opportunities: Opportunity[] = [\n      testOpportunity,\n      this.mockOpportunity({\n        id: 'test-opportunity',\n        contactId: '588b9214-6ec9-4519-8c30-62467ae95354',\n        lastActivity: testOpportunityActivity\n      }),\n      this.mockOpportunity({\n        id: 'test-opportunity',\n        contactId: '588b9214-6ec9-4519-8c30-62467ae95354',\n        lastActivity: testOpportunityActivity\n      })\n    ];\n    const contacts: Contact[] = [\n      this.mockContact({\n        id: '588b9214-6ec9-4519-8c30-62467ae95354',\n      }),\n      this.mockContact({\n        id: '38d2d7a0-fce9-4942-99e0-7819eda1bc9c',\n      }),\n      ...this.createMockList<Contact>(faker.random.number(50), this.mockContact)\n    ];\n    const dashboards: UserDashboard[] = [\n      this.mockDashboard({\n        id: 'test-dashboard',\n        contacts: contacts.length,\n        opportunities: opportunities.length\n      }),\n      ...this.createMockList<UserDashboard>(faker.random.number(20), this.mockDashboard)\n    ];\n    const data = { users, dashboards, contacts, opportunities, activities };\n    console.timeEnd('Create Mock Database');\n    console.log('Mock Databse created with data: ', data);\n    return data;\n  }\n}\n","\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UserDisplayNamePipe } from './user-display-name.pipe';\nimport { PlaceholderPipe } from './placeholder.pipe';\n\nconst exportedDeclarations = [UserDisplayNamePipe, PlaceholderPipe];\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [...exportedDeclarations],\n  exports: [...exportedDeclarations]\n})\nexport class PipesModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'placeholder'\n})\nexport class PlaceholderPipe implements PipeTransform {\n\n  transform(value: any, placeholder = '-'): any {\n    return typeof value === null || value === null ? placeholder : value;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'userDisplayName'\n})\nexport class UserDisplayNamePipe implements PipeTransform {\n\n  transform(value: any, fullName = true): any {\n    if (!value) {\n      return null;\n    }\n    if (fullName) {\n      return `${value.firstName} ${value.lastName}`;\n    }\n    return value.firstName;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { LogService } from './log/log.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  public baseEndpoint = '/api/';\n  constructor(private httpClient: HttpClient, private logger: LogService) { }\n\n  private getFullEndpoint(path: string) {\n    return `${this.baseEndpoint}${path}`;\n  }\n\n  public get(path: string, params = {}): Observable<any> {\n    const endpoint = this.getFullEndpoint(path);\n    const observable = this.httpClient.get(endpoint, params);\n    this.logger.info('GET ', endpoint, observable);\n    return observable;\n  }\n\n  public post(path: string, params = {}): Observable<any> {\n    const endpoint = this.getFullEndpoint(path);\n    const observable = this.httpClient.post(endpoint, params);\n    this.logger.info('POST ', endpoint, observable);\n    return observable;\n  }\n\n  public put(path: string, params = {}): Observable<any> {\n    const endpoint = this.getFullEndpoint(path);\n    const observable = this.httpClient.put(endpoint, params);\n    this.logger.info('PUT ', endpoint, observable);\n    return observable;\n  }\n\n  public delete(path: string, params = {}): Observable<any> {\n    const endpoint = this.getFullEndpoint(path);\n    const observable = this.httpClient.delete(endpoint, params);\n    this.logger.info('DELETE ', endpoint, observable);\n    return observable;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { StorageService } from './storage.service';\nimport { ApiService } from './api.service';\nimport { environment } from './../../environments/environment';\nimport { LogService } from './log/log.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  public user$ = new BehaviorSubject(null);\n  constructor(private api: ApiService, private storage: StorageService, private logger: LogService) {\n    const userFromStorage = storage.get(storage.keys.user);\n    logger.info('AuthService got user from storage: ', userFromStorage);\n    this.user$.next(userFromStorage);\n  }\n\n  private authenticateWithApi(email, password) {\n    this.logger.silly('AuthService.authenticateWithApi called with email ', email, 'password ', password);\n    if (!environment.production) {\n      this.logger.info('AuthService.authenticateWithApi using custom auth endpoint for testing environment.');\n      return this.api.get('users/test-user');\n    }\n    return this.api.post('authenticate', { email, password });\n  }\n\n  private loginUser(user) {\n    this.logger.silly('AuthService.loginUser called with user ', user);\n    this.storage.set(this.storage.keys.user, user);\n    this.user$.next(user);\n  }\n\n  public async loginWithCredentials(email, password) {\n    this.logger.silly('AuthService.loginWithCredentials called with email ', email, 'password', password);\n    const user = await this.authenticateWithApi(email, password).toPromise();\n    this.logger.silly('user authenticated.');\n    this.loginUser(user);\n    return user;\n  }\n\n  public logout() {\n    this.logger.info('logging out...');\n    this.storage.set(this.storage.keys.user, null);\n    this.user$.next(null);\n  }\n}\n","import { BreakpointObserver, BreakpointState } from '@angular/cdk/layout';\nimport { Injectable } from '@angular/core';\nimport { filter, map } from 'rxjs/operators';\nimport { Observable, merge, of } from 'rxjs';\n\ntype BreakpointStatePredicate = (result: BreakpointState) => boolean;\nconst resultMatches: BreakpointStatePredicate = result => result.matches;\nconst invert = (value: boolean) => !value;\n\ntype BreakpointStateToBoolean = (observable: Observable<BreakpointState>) => Observable<boolean>;\n\nconst getResultMatches: BreakpointStateToBoolean = observable => {\n  return observable.pipe(\n    filter(resultMatches),\n    map(resultMatches)\n  );\n};\n\nconst getNotResultMatches: BreakpointStateToBoolean = observable => {\n  return observable.pipe(\n    filter(resultMatches),\n    map(resultMatches),\n    map(invert)\n  );\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BreakpointService {\n  public breakpoints = {\n    desktop: '(min-width: 700px)',\n    notDesktop: '(max-width: 700px)'\n  };\n  public isDesktop$: Observable<boolean>;\n  constructor(public breakpointObserver: BreakpointObserver) {\n    this.isDesktop$ = merge(\n      of(false),\n      getResultMatches(breakpointObserver.observe([\n        this.breakpoints.desktop\n      ])),\n      getNotResultMatches(breakpointObserver.observe([\n        this.breakpoints.notDesktop\n      ]))\n    );\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { generateFakeGuid } from '../helpers/generate-fake-guid';\nimport { environment } from '../../environments/environment';\nimport { ApiService } from './api.service';\nimport { LogService } from './log/log.service';\nimport { CreateContactDialogData } from '../components/create-contact-dialog/create-contact-dialog-data';\nimport { Contact } from '../interfaces/contact';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactService {\n\n  constructor(private logger: LogService, private api: ApiService) { }\n\n  public createContact(data: CreateContactDialogData) {\n    this.logger.info('ContactService#createContact ', data);\n    return this.api.post(environment.production ? 'contacts' : `contacts/${generateFakeGuid()}`, data);\n  }\n\n  public getContacts(path = ''): Observable<Contact[]> {\n    this.logger.silly('ContactService#getContacts');\n    return this.api.get(`contacts${path}`);\n  }\n\n  public getContact(contactId: string): Observable<Contact> {\n    this.logger.silly('ContactyService#getContact ', contactId);\n    return this.api.get(`contacts/${contactId}`);\n  }\n\n  public updateContact(contactId: string, contact: Contact) {\n    this.logger.silly('ContactService#updateContact ', contactId, contact);\n    return this.api.put(`contacts/${contactId}`, contact);\n  }\n}\n","import { LogLevel } from './log-level.enum';\nimport { logLevels } from './log-levels';\n\n\nexport function logLevelToString(logLevel: LogLevel): string {\n  return logLevels[logLevel];\n}\n","export enum LogLevel {\n  'error' = 0,\n  'warning' = 1,\n  'info' = 2,\n  'silly' = 3\n}\n","import { LogLevel } from './log-level.enum';\n\nexport const logLevels = {\n  0: 'error',\n  1: 'warning',\n  2: 'info',\n  3: 'silly'\n};\n","import { environment } from './../../../environments/environment';\nimport { Injectable } from '@angular/core';\n\nimport { LogLevel } from './log-level.enum';\nimport { log } from './log';\nimport { LoggingFnFormatter } from './logging-fn-formatter';\nimport { logLevelToString } from './log-level-to-string';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogService {\n  public logLevel = environment.production ? LogLevel.error : LogLevel.silly;\n  public formatter: LoggingFnFormatter;\n\n\n  constructor() {\n    // sets the default formatter\n    this.formatter = this.defaultFormatter;\n  }\n\n\n  public defaultFormatter: LoggingFnFormatter = (level, ...args) => {\n    return [`${logLevelToString(level).toUpperCase()}: `, ...args];\n  }\n\n  public log(level: LogLevel, logFn: (...args: any[]) => void = window.console.log.bind(window.console), ...args: any[]) {\n    if (this.logLevel >= level) {\n      log(level, logFn, this.formatter, ...args);\n    }\n  }\n\n  public silly = (...args: any[]) => {\n    this.log(LogLevel.silly, window.console.log.bind(window.console), ...args);\n  }\n\n  public info = (...args: any[]) => {\n    this.log(LogLevel.info, window.console.log.bind(window.console), ...args);\n  }\n\n  public warning = (...args: any[]) => {\n    this.log(LogLevel.warning, window.console.warn.bind(window.console), ...args);\n  }\n\n  public error = (...args: any[]) => {\n    this.log(LogLevel.error, window.console.warn.bind(window.console), ...args);\n  }\n}\n","import { LoggingFn } from './logging-fn';\nimport { logLevelToString } from './log-level-to-string';\n\nexport const log: LoggingFn = function (logLevel, logFn = console.log.bind(window.console), formatFn, ...args) {\n  const message: any | any[] = typeof formatFn === 'function' ? formatFn(logLevel, ...args) : [logLevelToString(logLevel).toUpperCase(), ...args];\n  if (Array.isArray(message)) {\n    logFn(...message);\n  } else {\n    logFn(message);\n  }\n};\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { ApiService } from './api.service';\nimport { LogService } from './log/log.service';\nimport { Opportunity } from '../interfaces/opportunity';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OpportunityService {\n\n  constructor(private logger: LogService, private api: ApiService) { }\n\n  public getOpportunities(): Observable<Opportunity[]> {\n    this.logger.info('OpportunityService#getOpportunities');\n    return this.api.get('opportunities');\n  }\n\n  public getOpportunity(opportunityId: string): Observable<Opportunity> {\n    this.logger.info('OpportunityService#getOpportunity ', opportunityId);\n    return this.api.get(`opportunities/${opportunityId}`);\n  }\n\n  public updateOpportunity(opportunityId: string, opportunity: Opportunity) {\n    this.logger.info('OpportunityService#updateOpportunity', opportunityId);\n    return this.api.put(`opportunities/${opportunityId}`, opportunity);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { LogService } from './log/log.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n  public keys = {\n    user: 'invester-user'\n  };\n  public memoryStorage = {};\n  constructor(private logger: LogService) { }\n\n  set(key: string, value: string | any) {\n    const parsedValue = typeof value === 'string' ? value : JSON.stringify(value);\n    this.logger.silly('StorageService setting key ', key, 'to value ', value);\n    try {\n      localStorage.setItem(key, parsedValue);\n    } catch (err) {\n      console.error(err);\n      this.memoryStorage[key] = parsedValue;\n    }\n  }\n\n  get(key: string) {\n    this.logger.silly('StorageService getting key ', key);\n    try {\n      return JSON.parse(localStorage.getItem(key));\n    } catch (err) {\n      console.error(err);\n      return this.memoryStorage[key];\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { ApiService } from './api.service';\nimport { AuthService } from './auth.service';\nimport { UserDashboard } from '../interfaces/user-dashboard';\nimport { User } from '../interfaces/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private _dashboard$: Observable<UserDashboard>;\n  public user: User;\n\n  public get dashboard$() {\n    if (!this._dashboard$) {\n      return this._dashboard$ = this.getDashboardViaApi();\n    }\n    return this._dashboard$;\n  }\n\n  public set dashboard$(dashboard$: Observable<UserDashboard>) {\n    this._dashboard$ = dashboard$;\n  }\n\n  constructor(private auth: AuthService, private api: ApiService) {\n    this.auth.user$.subscribe(user => (this.user = user));\n  }\n\n  private getDashboardViaApi(): Observable<UserDashboard> {\n    return this.api.get(`dashboards/${this.user.dashboardId}`);\n  }\n\n  /**\n   * @description to manually pull the data from the api\n   */\n  fetchDashboardInfo(): Observable<UserDashboard> {\n    return this.dashboard$ = this.getDashboardViaApi();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}